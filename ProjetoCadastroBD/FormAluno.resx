<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA8gYAAAJNU0Z0AUkBTAIBAQMB
        AAGQAQABkAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARAW
        AANaAekDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A08BmQwAA0IBdAMSAf4D
        AAH/Ax0BKLQAAycBOhQAAzUBVgNhAesDFgEeCAADWQHADAADWwHkAxUBHQcAAf8DHQEoQAADCAEKA1UB
        sQMOARIDFgEeA1sBygMlATdYAAMeASoYAAM5AV4DOQFeAwAB/wQAA1UBrxMAAf8DEgEYBwAB/wMdASg8
        AANGAX0DNwFaAzoBYgNEAXgDKAE8AzsBYwNAAW8DHQEpUAADHgEqGwAB/wMzAVIHAAH/A1UBrxcAAf8D
        EgEYBwAB/wMdASgwAAM/AWwEAANMAY4DFAEbA0wBkAMOARIDWQG+AzABSgMPARMDEgEYUAADHgEqAzUB
        +QNIAYQDUQGhAwAB/wMAAf8DJAH9AyQBNANKAYkLAAH/GwAB/wMTARkHAAH/Ax0BKCgAAwMBBANDAXYD
        NAFUAzgBXANWAbUDJAE1A1gBvQMkATQDRgF+A0YBgANRAaEDGAEgTAADHgEqA1AB8wQAA1EBoQNSAaAD
        UwGmA1MBpgM/AWwDJAE0A0oBiQsAAf8bAAH/AxMBGQcAAf8DPAH4AwAB/wMAAf8DAAH/AwAB/wNVAbQQ
        AAMbASYDOwFlA00BkgMmATkDUAHzAygBOwNKAYoDOgFhAzABSgMJAQsDFQEdA0gBhEwAAx4BKgMiATED
        IgExAwUBBhQAAyQBNANKAYkLAAH/GwAB/wMTARkDAAH/Ax4BKhAAA1IBoAMAAf8MAAMbASUDPQFpA0oB
        igMsAUMDWwHeAyABLgMYASADTgGUAwIBAwNGAX8EAANGAX9MAAMeASoDVwHxA1cB8QM9AWkYAAMkATQD
        SgGJA04BmAMfASwDAAH/GwAB/wMGAQcYAANMAY4DXQHODAADRAF6AxIBGANGAYEDEgEXA14B1wNdAeoD
        RgF/Aw8BFANKAYsDIQEwA0ABcEwAAx4BKgNQAfMEAANRAaEcAANVAa8DTwGbBwAB/xQABAIDJAH8IwAB
        /wwAA0QBegMQARUDPQFoA0QBeQMpAT0DLAFDAz4BagNWAbIDKgFAA1sBzQMaASRMAAMeASoDAAH/AwAB
        /wNSAaADUwGmA1UBrANVAawDQQFyDAADVQGvAwoBDQNSAaAYAANNAZIDLgFIIAADIQH7CAADUQGkAxsB
        JQNeAdIDEgEYAxUBHANKAYkDWQHAAzYBWQQAA1YBswMjATIDKwFCTAADHgEqKAADVQGvIAADVQGxAxoB
        JCAAA14B3QgAAyMBMwNGAX0DEgEYAzkBXwM9AWkDPgFqAz8BbANNAZIDVQGvAzYBVwM6AWADPQFnTAAD
        HgEqA0MB9wM5AV4DUQGhAwAB/wMAAf8DIQH7CAADRgGBA1IBowNeAeIgAAMrAUEDVAGrIwAB/wwAAxkB
        IwNgAdsDLQFFBAADEAEVAx4BKwMCAQMDEwEaA1MBpwMrAUFQAAMeASoDUAHzBAADUQGhA1sBxQNbAcoD
        WwHKA0wBjgNbAd4EAAMwAUwDPQFpJwAB/wQAA1cBwgMmAfoEAQMPARMDAAH/AyQBNQcAAf8MAAMEAQUD
        KwFCAzkBXwNIAYQDRgGAA0YBgANHAYMDQgF0AysBQgMKAQ1QAAMeASoDCwEOAwsBDhcAAf8DMAFMAz0B
        aSgAAz0BaQMkAfwEAAMSARgDYQHmA10B0QQBBwAB/wQBDAADCwEOA1wBywNaAb8DJgE4AxEBFgMOARID
        NwFaA1ABnwNcAdYDFAEbUwAB/wMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDAAH/Az0BZzAAA0QB
        eAMAAf8DRAF7BAAEAQNXAbwDAAH/AwsBDhgAAycBOgM/AW0DRgF/A0YBgANCAXUDMQFOAwwBD7QAA0IB
        dANXAfEDYAHgAyoBQIwAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAGAAQcB
        DwP/AgABvgE3AScB/wH4AR8CAAG/ARcBkwH/AfgBBwIAAb8BJwHJAf8B6AEHAgABgAE3AeQB/wHAAQMC
        AAGQARsB8gEDAcABAwIAAYcBzQH4AXkBwAELAgABhwHgAvwB4AEDAgABlwHyAfkB/gHgAQMCAAGAAXEB
        +QH+AcABIwIAAb8B9wH5Af4BwAEDAgABgAHHAfkB/gHiAQcCAAGQAScB/QECAeABBwIAAo8B/AGEAeAB
        BwIAAYABHwH+ASEB+AEPAgAD/wGHAv8CAAs=
</value>
  </data>
</root>