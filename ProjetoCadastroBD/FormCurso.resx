<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA8AYAAAJNU0Z0AUkBTAIBAQMB
        AAFYAQABWAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARBW
        AANSAekDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A08BmQwAA0IBdAMLAf4D
        AAH/Ax0BKIQAAwgBCgNVAbEDDgESAxYBHgNbAcoDJQE3GAADJwE6FAADNQRWAesDFgEeCAADWQHADAAD
        VwHkAxUBHQcAAf8DHQEogAADRgF9AzcBWgM6AWIDRAF4AygBPAM7AWMDQAFvAx0BKRAAAx4BKhgAAzkB
        XgM5AV4DAAH/BAADVQGvEwAB/wMSARgHAAH/Ax0BKHQAAz8BbAQAA0wBjgMUARsDTAGQAw4BEgNZAb4D
        MAFKAw8BEwMSARgQAAMeASobAAH/AzMBUgcAAf8DVQGvFwAB/wMSARgHAAH/Ax0BKGwAAwMBBANDAXYD
        NAFUAzgBXANWAbUDJAE1A1gBvQMkATQDRgF+A0YBgANRAaEDGAEgDAADHgEqAyQB+QNIAYQDUQGhAwAB
        /wMAAf8DFgH9AyQBNANKAYkLAAH/GwAB/wMTARkHAAH/Ax0BKGgAAxsBJgM7AWUDTQGSAyYBOQNAAfMD
        KAE7A0oBigM6AWEDMAFKAwkBCwMVAR0DSAGEDAADHgEqA0AB8wQAA1EBoQNSAaADUwGmA1MBpgM/AWwD
        JAE0A0oBiQsAAf8bAAH/AxMBGQcAAf8DLgH4AwAB/wMAAf8DAAH/AwAB/wNVAbRQAAMbASUDPQFpA0oB
        igMsAUMDWwHeAyABLgMYASADTgGUAwIBAwNGAX8EAANGAX8MAAMeASoDIgExAyIBMQMFAQYUAAMkATQD
        SgGJCwAB/xsAAf8DEwEZAwAB/wMeASoQAANSAaADAAH/UAADRAF6AxIBGANGAYEDEgEXA14B1wNSAeoD
        RgF/Aw8BFANKAYsDIQEwA0ABcAwAAx4BKgNHAfEDRwHxAz0BaRgAAyQBNANKAYkDTgGYAx8BLAMAAf8b
        AAH/AwYBBxgAA0wBjgNdAc5MAANEAXoDEAEVAz0BaANEAXkDKQE9AywBQwM+AWoDVgGyAyoBQANbAc0D
        GgEkDAADHgEqA0AB8wQAA1EBoRwAA1UBrwNPAZsHAAH/FAAEAgMWAfwjAAH/SAADUQGkAxsBJQNdAdID
        EgEYAxUBHANKAYkDWQHAAzYBWQQAA1YBswMjATIDKwFCDAADHgEqAwAB/wMAAf8DUgGgA1MBpgNVAawD
        VQGsA0EBcgwAA1UBrwMKAQ0DUgGgGAADTQGSAy4BSCAAAyAB+0gAAyMBMwNGAX0DEgEYAzkBXwM9AWkD
        PgFqAz8BbANNAZIDVQGvAzYBVwM6AWADPQFnDAADHgEqKAADVQGvIAADVQGxAxoBJCAAA1sB3UwAAxkB
        IwNdAdsDLQFFBAADEAEVAx4BKwMCAQMDEwEaA1MBpwMrAUEQAAMeASoDNAH3AzkBXgNRAaEDAAH/AwAB
        /wMgAfsIAANGAYEDUgGjA1oB4iAAAysBQQNUAasjAAH/TAADBAEFAysBQgM5AV8DSAGEA0YBgANGAYAD
        RwGDA0IBdAMrAUIDCgENEAADHgEqA0AB8wQAA1EBoQNbAcUDWwHKA1sBygNMAY4DWwHeBAADMAFMAz0B
        aScAAf8EAANXAcIDHwH6BAEDDwETAwAB/wMkATUHAAH/TAADCwEOA1wBywNaAb8DJgE4AxEBFgMOARID
        NwFaA1ABnwNcAdYDFAEbEAADHgEqAwsBDgMLAQ4XAAH/AzABTAM9AWkoAAM9AWkDFgH8BAADEgEYA1kB
        5gNdAdEEAQcAAf8EAVQAAycBOgM/AW0DRgF/A0YBgANCAXUDMQFOAwwBDxcAAf8DHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDHQEpAwAB/wM9AWcwAANEAXgDAAH/A0QBewQABAEDVwG8AwAB/wMLAQ7oAANCAXQD
        RwHxA1sB4AMqAUBMAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wGAAQcB
        DwH/AgAB+AEfAb4BNwEnAf8CAAH4AQcBvwEXAZMB/wIAAegBBwG/AScByQH/AgABwAEDAYABNwHkAf8C
        AAHAAQMBkAEbAfIBAwIAAcABCwGHAc0B+AF5AgAB4AEDAYcB4AL8AgAB4AEDAZcB8gH5Af4CAAHAASMB
        gAFxAfkB/gIAAcABAwG/AfcB+QH+AgAB4gEHAYABxwH5Af4CAAHgAQcBkAEnAf0BAgIAAeABBwKPAfwB
        hAIAAfgBDwGAAR8B/gEhAgAF/wGHAgAL
</value>
  </data>
</root>